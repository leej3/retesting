name: tftesting
services:
    dashboard_backend:
        image: "${API_IMAGE:-${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/api-shared:${RELEASE_TAG}}"
        # pull_policy: always
        environment:
            - POSTGRES_URI="${POSTGRES_URI}"
        expose:
            - "80"
        labels:
            - traefik.enable=true
            - traefik.docker.network=tftesting_traefik-public
            - traefik.http.routers.tftesting_web_api.rule=Host("`${DEPLOYMENT_URI}`") && PathPrefix(`/api`)
            - "traefik.http.routers.tftesting_web_api.entrypoints=web,websecure"
            - traefik.http.services.tftesting_web_api.loadbalancer.server.port=80
            - traefik.http.routers.tftesting_web_api.tls=true
            - traefik.http.routers.tftesting_web_api.tls.certresolver=le
        networks:
            - traefik-public
        restart: always

    dashboard:
        image: "${DASHBOARD_IMAGE:-${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/dashboard-shared:${RELEASE_TAG}}"
        build: dashboard
        pull_policy: always
        environment:
            - POSTGRES_URI="${POSTGRES_URI}"
        labels:
            - traefik.enable=true
            - traefik.docker.network=tftesting_traefik-public
            - traefik.http.routers.dashboard.rule=Host("`${DEPLOYMENT_URI}`")
            - traefik.http.routers.dashboard.entrypoints=web,websecure
            - traefik.http.services.dashboard.loadbalancer.server.port=8501
            - traefik.http.routers.dashboard.tls=true
            - traefik.http.routers.dashboard.tls.certresolver=le
        expose:
            - "8501"

        networks:
            - traefik-public
        restart: always

    frps:
        image: frps
        container_name: frps
        networks:
            - traefik-public
        volumes:
            - ./frp_config:/etc/frp
        command: -c /etc/frp/frps.toml
        ports:
            - "7005:7005"

    frpc:
        image: frpc
        container_name: frpc
        networks:
            - traefik-public
        volumes:
            - ./frp_config:/etc/frp
        command: -c /etc/frp/frpc.toml


    # reverse_proxy:
    #     image: traefik
    #     restart: always
    #     command:
    #         - --providers.docker=true
    #         - --providers.docker.exposedbydefault=false
    #         - --entrypoints.web.address=:80
    #         - --entrypoints.websecure.address=:443
    #         - --entryPoints.web.http.redirections.entryPoint.to=websecure
    #         - "--certificatesresolvers.le.acme.email=${LETSENCRYPT_ADMIN_EMAIL}"
    #         - --certificatesresolvers.le.acme.storage=/certificates/acme.json
    #         - --certificatesresolvers.le.acme.tlschallenge=true
    #         - --log
    #         - --accesslog
    #         - --log.level=DEBUG
    #     ports:
    #         - 80:80
    #         - 8080:8080
    #         - 443:443
    #     volumes:
    #         - /var/run/docker.sock:/var/run/docker.sock:ro
    #         - traefik-public-certificates:/certificates
    #     networks:
    #         - traefik-public


    postgres:
        image: postgres:15
        env_file: "../.env"
        ports:
            - "5400:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s  # Added missing timeout value
            retries: 5

volumes:
    postgres_data:
    traefik-public-certificates:

networks:
    traefik-public:
